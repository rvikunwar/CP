
You are given 3 integers — 𝑛, 𝑥, 𝑦. Let's call the score of a permutation† 𝑝1,…,𝑝𝑛 the following value:

(𝑝1⋅𝑥+𝑝2⋅𝑥+…+𝑝⌊𝑛𝑥⌋⋅𝑥)−(𝑝1⋅𝑦+𝑝2⋅𝑦+…+𝑝⌊𝑛𝑦⌋⋅𝑦)

In other words, the score of a permutation is the sum of 𝑝𝑖 for all indices 𝑖 divisible by 𝑥, minus the sum of 𝑝𝑖 for all indices 𝑖 divisible by 𝑦.

You need to find the maximum possible score among all permutations of length 𝑛.

For example, if 𝑛=7, 𝑥=2, 𝑦=3, the maximum score is achieved by the permutation [2,6⎯⎯,1⎯⎯,7⎯⎯,5,4⎯⎯⎯⎯,3] and is equal to (6+7+4)−(1+4)=17−5=12.

† A permutation of length 𝑛 is an array consisting of 𝑛 distinct integers from 1 to 𝑛 in any order. For example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (the number 2 appears twice in the array) and [1,3,4] is also not a permutation (𝑛=3, but the array contains 4).

Input
The first line of input contains an integer 𝑡 (1≤𝑡≤104) — the number of test cases.

Then follows the description of each test case.

The only line of each test case description contains 3 integers 𝑛, 𝑥, 𝑦 (1≤𝑛≤109, 1≤𝑥,𝑦≤𝑛).

Output
For each test case, output a single integer — the maximum score among all permutations of length 𝑛.


#include <bits/stdc++.h>
using namespace std;

int gcd(int a, int b){
    if(b == 0){
        return a;
    }
    return gcd(b, a%b);
}

int main() {

    int t;
    cin>>t;
    while(t--) {
        long long n, x, y;
        cin>>n>>x>>y;
        long long ans = 0;


        long long lcm = (x * y) / gcd(x, y);
        int common = n/lcm;

        long long xFactors = (n/x) - common;
        long long yFactors = (n/y) - common;

        ans = (n*(n+1)/2) - ((n-xFactors)*((n-xFactors)+1)/2);

        ans -= (yFactors * (yFactors+1)/2);

        cout<<ans<<endl;

    }
    return 0;
    
}